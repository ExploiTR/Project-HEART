package hacks.exploitr.projectheart.ui;

import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentTransaction;

import hacks.exploitr.projectheart.R;
import hacks.exploitr.projectheart.databinding.FragmentFirstBinding;
import hacks.exploitr.projectheart.system.NetworkHelper;

public class FirstFragment extends Fragment {

	private FragmentFirstBinding binding;
	private FragmentChangeListener mListener;

	long type1;

	@Override
	public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		binding = FragmentFirstBinding.inflate(inflater, container, false);
		return binding.getRoot();
	}

	public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);

	/*	FragmentTransaction transaction = getParentFragmentManager().beginTransaction();
		transaction.replace(R.id.nav_host_fragment_content_main, new SecondFragment());
		transaction.addToBackStack(FirstFragment.class.getName());
		transaction.commit();*/
		fetchIPAddress();


		/*int[] firstInput_2 = new int[]{
				888, 1, 96, 5, 255, 159, 129, 111, 851, 942, 87, 833, 761, 67, 616,
				652, 598, 525, 399, 326, 399, 417, 435, 525, 598, 797, 96, 116,
				129, 154, 154, 167, 156, 161, 143, 149, 152, 154, 15, 158, 152, 158, 159,
				163, 167, 174, 194, 243, 304, 402, 484, 576, 674, 761, 772, 712, 661, 623,
				605, 614, 466, 237, 12, 87, 652, 543, 362, 29, 181, 145, 543
		};

		Integer[] ints = new Integer[]{
				888, 1, 96, 5, 255, 159, 129, 111, 851, 942, 87, 833, 761, 67, 616,
				652, 598, 525, 399, 326, 399, 417, 435, 525, 598, 797, 96, 116,
				129, 154, 154, 167, 156, 161, 143, 149, 152, 154, 15, 158, 152, 158, 159,
				163, 167, 174, 194, 243, 304, 402, 484, 576, 674, 761, 772, 712, 661, 623,
				605, 614, 466, 237, 12, 87, 652, 543, 362, 29, 181, 145, 543
		};
		ArrayList<Integer> integers = new ArrayList<>(Arrays.asList(ints));

		Integer[] otherList = new Integer[]{
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		};

		type1 = System.currentTimeMillis();
		Collections.addAll(integers, otherList);
		System.out.println(integers);
		System.out.println(System.currentTimeMillis() - type1);

		AI.getInstance().getType(this.getContext(), firstInput_2, new AI.AnswerListener() {
			@Override
			public void output(int out) {
				System.out.println(AI.DISEASES[out]);
				System.out.println(System.currentTimeMillis() - type2);
			}

			@Override
			public void onStart() {
				type2 = System.currentTimeMillis();
			}

			@Override
			public void errorDes(String err) {

			}
		});*/
	}

	private void fetchIPAddress() {
		NetworkHelper.ip_address(requireContext(), new NetworkHelper.NetworkOperationProgress() {
			@Override
			public void progress(int percent) {
				requireActivity().runOnUiThread(() -> binding.percentScan.setText("Finding Monitor..." + percent + "%"));
			}

			@Override
			public void result(String what) {
				requireActivity().runOnUiThread(() -> {
					binding.promptButton.setVisibility(View.VISIBLE);
					if (what != null && !what.isEmpty()) {
						binding.percentScan.setText("Found device at " + what);
						binding.promptButton.setText("Connect");
						binding.promptButton.setOnClickListener(view -> {
							FragmentTransaction transaction = getParentFragmentManager().beginTransaction();
							transaction.replace(R.id.nav_host_fragment_content_main, new SecondFragment());
							transaction.addToBackStack(FirstFragment.class.getName());
							transaction.commit();
						});
					} else {
						binding.percentScan.setText("Device not found!\nChange config from menu");
						binding.promptButton.setText("Retry");
						binding.promptButton.setOnClickListener(view -> {
							binding.promptButton.setVisibility(View.INVISIBLE);
							fetchIPAddress();
						});
					}
				});
			}
		});
	}

	@Override
	public void onResume() {
		super.onResume();
		mListener.onChangeTo(getString(R.string.first_fragment_label));
	}

	@Override
	public void onAttach(@NonNull Context context) {
		super.onAttach(context);
		if (context instanceof FragmentChangeListener) {
			mListener = (FragmentChangeListener) context;
		} else {
			throw new RuntimeException(context.toString()
					+ " must implement FragmentChangeListener");
		}
	}

	@Override
	public void onDetach() {
		super.onDetach();
		mListener = null;
	}

	@Override
	public void onDestroyView() {
		super.onDestroyView();
		binding = null;
	}

}