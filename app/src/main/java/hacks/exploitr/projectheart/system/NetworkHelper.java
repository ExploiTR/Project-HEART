package hacks.exploitr.projectheart.system;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.wifi.WifiManager;
import android.text.format.Formatter;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetSocketAddress;
import java.net.Socket;

public class NetworkHelper {
	private static final int port = 188;
	private static String ip_address;

	public static void ip_address(Context context, NetworkOperationProgress progress) {
		WifiManager manager = (WifiManager) context.getApplicationContext().getSystemService(Context.WIFI_SERVICE);
		ConnectivityManager cm = (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);

		if (manager.isWifiEnabled() && cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected()) {
			progress.progress(5);
			new Thread(() -> {
				String main = Formatter.formatIpAddress(manager.getDhcpInfo().gateway);
				String partialAddress = main.substring(0, main.length() - main.split("\\.")[3].length());
				boolean foundAny = false;
				for (int i = 1; i < 255; i++) {
					String completeAddr = partialAddress + i;
					if (available(completeAddr)) {
						progress.result(completeAddr);
						foundAny = true;
						break;
					}
					progress.progress((i * 100) / 255);
				}
				if (!foundAny)
					progress.result(null);
			}).start();
		}
	}

	public static void read(NetworkOperationProgress progress) {
		new Thread(() -> {
			try {
				Socket socket = new Socket(ip_address, port);
				BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				String read;
				while ((read = reader.readLine()) != null) {
					progress.result(read);
				}
				socket.close();
				/*whiles (true) {
					Thread.sleep(8);
				}*/
			} catch (IOException /*| InterruptedException*/ yes) {
				yes.printStackTrace();
			}
		}).start();
	}

	private static boolean available(String ip) {
		try {
			ip_address = ip;
			Socket socket = new Socket();
			socket.connect(new InetSocketAddress(ip, port), 25);
			socket.close();
			return true;
		} catch (IOException ignored) {
			return false;
		}
	}

	public interface NetworkOperationProgress {
		void progress(int percent);

		void result(String what);
	}
}
